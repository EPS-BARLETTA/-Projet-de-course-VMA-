<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calcul de VMA</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 20px;
            max-width: 600px;
            margin: auto;
        }
        input, button {
            font-size: 18px;
            margin: 10px 0;
            padding: 10px;
            width: 100%;
            max-width: 200px;
        }
        button {
            cursor: pointer;
            color: white;
            border: none;
            border-radius: 50%;
            width: 100px;
            height: 100px;
            margin: 5px;
        }
        .btn-start { background-color: #4CAF50; }
        .btn-plot { background-color: #2196F3; }
        .btn-download { background-color: #FF9800; display: none; }
        .btn-reset { background-color: #f44336; display: none; }
        .input-row {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        .info-box {
            border: 2px solid green;
            padding: 10px;
            margin: 20px 0;
            font-weight: bold;
            color: green;
        }
        .results, #finalSummary {
            margin-top: 20px;
            font-size: 16px;
        }
        #resultsLog {
            margin: 10px 0;
        }
        label { display: block; margin-top: 10px; }
        .button-container {
            display: flex;
            justify-content: space-around;
        }
    </style>
</head>
<body>

    <h1>Calcul de la VMA</h1>

    <input type="text" id="runnerName" placeholder="Nom du coureur" required>
    <input type="text" id="observerName" placeholder="Nom de l'observateur" required>

    <div class="input-row">
        <div>
            <label for="runnerVMA">VMA du coureur (km/h) :</label>
            <input type="number" id="runnerVMA" placeholder="VMA du coureur" required step="0.5">
        </div>
        <div>
            <label for="targetPercentage">Pourcentage de la VMA cible (%) :</label>
            <input type="number" id="targetPercentage" placeholder="Ex: 50" required step="0.5">
        </div>
    </div>

    <label for="duration">Durée de la course (en minutes, multiples de 1:30) :</label>
    <input type="number" id="duration" min="1.5" step="1.5" value="3">

    <div id="infoBox" class="info-box" style="display:none;"></div>

    <div class="button-container">
        <button class="btn-start" onclick="startRace()">Démarrer</button>
        <button class="btn-plot" onclick="addPlot()">Passer un plot</button>
    </div>

    <div id="controlSection" style="display:none;">
        <button class="btn-download" onclick="downloadResults()">Télécharger</button>
        <button class="btn-reset" onclick="reset()">Réinitialiser</button>

        <p>Temps écoulé : <span id="timeElapsed">0:00</span></p>
        <p>Plots passés : <span id="plotCount">0</span></p>
        <div id="resultsLog"></div>
        <div id="finalSummary" style="display:none;"></div>
    </div>

    <script>
        let duration, interval, timeElapsed = 0, plotCount = 0, results = [];

        function startRace() {
            const runnerName = document.getElementById("runnerName").value;
            const observerName = document.getElementById("observerName").value;
            const runnerVMA = parseFloat(document.getElementById("runnerVMA").value);
            const targetPercentage = parseFloat(document.getElementById("targetPercentage").value);

            if (!runnerName || !observerName || isNaN(runnerVMA) || isNaN(targetPercentage)) {
                alert("Veuillez remplir toutes les informations avant de démarrer la course.");
                return;
            }

            duration = parseFloat(document.getElementById("duration").value) * 60; // Durée en secondes
            plotCount = 0;
            results = [`Coureur : ${runnerName}, Observateur : ${observerName}`];
            timeElapsed = 0;

            const targetVMA = runnerVMA * (targetPercentage / 100); // VMA à 50%
            const expectedPlots = Math.round(targetVMA * 2);  // Nombre de plots à passer

            document.getElementById("infoBox").style.display = "block";
            document.getElementById("infoBox").textContent = `À ${targetPercentage}% de la VMA (${targetVMA.toFixed(2)} km/h), le coureur doit passer ${expectedPlots} plots par 1:30.`;
            document.getElementById("controlSection").style.display = "block";
            document.getElementById("plotCount").textContent = plotCount;
            document.getElementById("timeElapsed").textContent = formatTime(0);
            document.getElementById("resultsLog").innerHTML = "";
            document.getElementById("finalSummary").style.display = "none";

            interval = setInterval(updateTime, 1000);
        }

        function updateTime() {
            timeElapsed++;
            document.getElementById("timeElapsed").textContent = formatTime(timeElapsed);

            if (timeElapsed % 90 === 0) {
                calculateVMA();
            }

            if (timeElapsed >= duration) {
                clearInterval(interval);
                displayFinalSummary();
                document.querySelector(".btn-download").style.display = "inline-block";
                document.querySelector(".btn-reset").style.display = "inline-block";
                alert("Course terminée !");
            }
        }

        function addPlot() {
            plotCount++;
            document.getElementById("plotCount").textContent = plotCount;
        }

        function calculateVMA() {
            const runnerVMA = parseFloat(document.getElementById("runnerVMA").value);
            const targetPercentage = parseFloat(document.getElementById("targetPercentage").value);
            const targetVMA = runnerVMA * (targetPercentage / 100);
            const expectedPlots = Math.round(targetVMA * 2); // Nombre de plots à passer
            const achievedPlots = plotCount;

            const diffPlots = achievedPlots - expectedPlots; // Différence en plots
            const message = `Après ${formatTime(timeElapsed)} : ${achievedPlots} plots (Différence : ${diffPlots})`;
            document.getElementById("resultsLog").innerHTML += `<p>${message}</p>`;
            results.push({ time: formatTime(timeElapsed), diff: diffPlots }); // Stocker le temps et la différence
            plotCount = 0; // Réinitialiser le compte des plots pour la période suivante
        }

        function displayFinalSummary() {
            document.getElementById("finalSummary").style.display = "block";
            const totalDiff = results.reduce((acc, result) => acc + result.diff, 0);
            const summaryMessages = results.map(result => {
                return `Temps : ${result.time}, Différence : ${result.diff} plots`;
            });
            document.getElementById("finalSummary").textContent = `Bilan : ${summaryMessages.join(', ')}, Total Différence : ${totalDiff} plots`;
        }

        function downloadResults() {
            const data = results.map(result => {
                return `Temps : ${result.time}, Différence : ${result.diff} plots`;
            }).join('\n');
            const blob = new Blob([data], { type: 'text/plain' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'bilan_course.txt';
            link.click();
        }

        function reset() {
            document.getElementById("runnerName").value = '';
            document.getElementById("observerName").value = '';
            document.getElementById("runnerVMA").value = '';
            document.getElementById("targetPercentage").value = '';
            document.getElementById("infoBox").style.display = "none";
            document.getElementById("controlSection").style.display = "none";
            document.getElementById("timeElapsed").textContent = "0:00";
            document.getElementById("plotCount").textContent = "0";
            document.getElementById("resultsLog").innerHTML = "";
            document.getElementById("finalSummary").style.display = "none";
            document.querySelector(".btn-download").style.display = "none";
            document.querySelector(".btn-reset").style.display = "none";
        }

        function formatTime(seconds) {
                        const minutes = Math.floor(seconds / 60);
            const secs = seconds % 60;
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }
    </script>
</body>
</html>